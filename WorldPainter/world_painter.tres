[gd_resource type="Shader" format=3 uid="uid://csqf7jis2m0xr"]

[resource]
code = "shader_type spatial;

uniform sampler2D base_texture:hint_default_white;
uniform sampler2D splash_texture:repeat_disable;

uniform vec2 position;
uniform float rotation:hint_range(0.0, 6.283184);
uniform float scalation:hint_range(0.0, 10.0);
uniform float reveal_factor:hint_range(0.0, 1.0);

const vec3 SPLASH_COLOR = vec3(0);
const float HALF_PI = PI/2.0;


vec2 rotate_and_scale_from_center(vec2 uv, float scale, float angle){
	angle = angle + HALF_PI;
	scale = 1.0 / scale;
	mat2 rotation_matrix = mat2(vec2(sin(angle), -cos(angle)), vec2(cos(angle), sin(angle)));
	return ((uv - 0.5) * scale*rotation_matrix) + 0.5;
}

void fragment(){
	ALBEDO = texture( base_texture, UV ).rgb;
	
	vec2 uv_translated = UV - position;
	vec2 uv_transformed = rotate_and_scale_from_center( uv_translated, scalation, rotation );
	float splash_pixel = texture( splash_texture, uv_transformed ).r;
	
	if(splash_pixel < reveal_factor){
		ALBEDO = SPLASH_COLOR;
	}
}
"
